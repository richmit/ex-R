# -*- Mode:Org; Coding:utf-8; fill-column:158 org-html-link-org-files-as-html:nil -*-
#+TITLE:       Data Smoothing
#+AUTHOR:      Mitch Richling
#+EMAIL:       http://www.mitchr.me/
#+DATE:        2020-01-25
#+DESCRIPTION: Data Smoothing@EOL
#+KEYWORDS:    Data Smoothing
#+LANGUAGE:    en
#+OPTIONS:     num:t toc:nil \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t skip:nil d:nil todo:t pri:nil H:5 p:t author:t html-scripts:nil 
#+SEQ_TODO:    TODO:NEW(t)                         TODO:WORK(w)    TODO:HOLD(h)    | TODO:FUTURE(f)   TODO:DONE(d)    TODO:CANCELED(c)
#+HTML_HEAD: <style>body { width: 95%; margin: 2% auto; font-size: 18px; line-height: 1.4em; font-family: Georgia, serif; color: black; background-color: white; }</style>
#+HTML_HEAD: <style>body { min-width: 820px; max-width: 1024px; }</style>
#+HTML_HEAD: <style>h1,h2,h3,h4,h5,h6 { color: #A5573E; line-height: 1em; font-family: Helvetica, sans-serif; }</style>
#+HTML_HEAD: <style>h1,h2,h3 { line-height: 1.4em; }</style>
#+HTML_HEAD: <style>h1.title { font-size: 3em; }</style>
#+HTML_HEAD: <style>h4,h5,h6 { font-size: 1em; }</style>
#+HTML_HEAD: <style>.org-src-container { border: 1px solid #ccc; box-shadow: 3px 3px 3px #eee; font-family: Lucida Console, monospace; font-size: 80%; margin: 0px; padding: 0px 0px; position: relative; }</style>
#+HTML_HEAD: <style>.org-src-container>pre { line-height: 1.2em; padding-top: 1.5em; margin: 0.5em; background-color: #404040; color: white; overflow: auto; }</style>
#+HTML_HEAD: <style>.org-src-container>pre:before { display: block; position: absolute; background-color: #b3b3b3; top: 0; right: 0; padding: 0 0.2em 0 0.4em; border-bottom-left-radius: 8px; border: 0; color: white; font-size: 100%; font-family: Helvetica, sans-serif;}</style>
#+HTML_HEAD: <style>pre.example { white-space: pre-wrap; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; font-family: Lucida Console, monospace; font-size: 80%; background: #404040; color: white; display: block; padding: 0em; border: 2px solid black; }</style>
#+HTML_LINK_HOME: https://www.mitchr.me/
#+HTML_LINK_UP: https://www.mitchr.me/SS/exampleR/index.html
#+HTML_LINK_UP: https://richmit.github.io/ex-R/
#+EXPORT_FILE_NAME: ../docs/smoothing

#+ATTR_HTML: :border 2 solid #ccc :frame hsides :align center
|        <r> | <l>                    |
|  *Author:* | /{{{author}}}/         |
| *Updated:* | /{{{time(%Y-%m-%d)}}}/ |
#+ATTR_HTML: :align center
Copyright 2020 Mitch Richling. All rights reserved.

#+TOC: headlines 5

#        #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #
#   00   #    10   #    20   #    30   #    40   #    50   #    60   #    70   #    80   #    90   #   100   #   110   #   120   #   130   #   140   #   150   #   160   #
# 234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
#        #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #
#        #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #

* Source Code and Files

  - file:smoothing.org
  - file:smoothing.R

* Example Data

#+BEGIN_SRC R :session :results silent :exports code :tangle "../tangled/smoothing.R"
  nPts <- 150
  xDat <- 1:nPts
  yDat <- rnorm(nPts, mean=0, sd=10)+xDat*.2
#+END_SRC

* Various Smoothers

** Compute various smoothed data sets

Some methods produce objects with new X data while others just produce new Y data.

#+BEGIN_SRC R :session :results silent :exports code :tangle "../tangled/smoothing.R"
  smDatRunMed     <- runmed(yDat, 15)                      # Running Median
  smDatRunAvg2    <- stats::filter(yDat,                   # Two sided, running average
                                   rep(1/15,15), 
                                   method='convolution', 
                                   sides=2)
  smDatRunAvg1    <- stats::filter(yDat,                   # One sided, running average 
                                   rep(1/7,7), 
                                   method='convolution', 
                                   sides=1)
  smDatTuk3RS3R   <- smooth(yDat, kind = "3RS3R")          # Tukey Smoother
  smDatLowess0d10 <- lowess(xDat, yDat, f=.1)              # Cleveland lowess smoother
  smDatSupSmu     <- supsmu(xDat, yDat, span=.1)           # Friedman's SuperSmoother
#+END_SRC

** Put it all in a data.frame for ggplot

#+BEGIN_SRC R :session :results silent :exports code :tangle "../tangled/smoothing.R"
allDat <- rbind(data.frame(smoother=rep('actual',   nPts), x=xDat,           y=yDat),
                data.frame(smoother=rep('runMed',   nPts), x=xDat,           y=smDatRunMed),
                data.frame(smoother=rep('runAvg2',  nPts), x=xDat,           y=smDatRunAvg2),
                data.frame(smoother=rep('runAvg1',  nPts), x=xDat,           y=smDatRunAvg1),
                data.frame(smoother=rep('tuk3RS3R', nPts), x=xDat,           y=as.vector(smDatTuk3RS3R)),
                data.frame(smoother=rep('lowess',   nPts), x=smDatLowess0d10$x, y=smDatLowess0d10$y),
                data.frame(smoother=rep('supsmu',   nPts), x=smDatSupSmu$x,     y=smDatSupSmu$y)
                )
#+END_SRC

** Plot them all

#+BEGIN_SRC R :session :file ../docs/figures/smoothing/dif.png :width 800 :height 600 :results graphics :exports code :tangle "../tangled/smoothing.R"
ggplot(allDat, aes(x=x, y=y, col=smoother)) +
  geom_line(data=subset(allDat,  smoother!='actual')) +
  geom_point(data=subset(allDat, smoother=='actual'))
#+END_SRC

#+RESULTS:

file:figures/smoothing/dif.png  

* Lowess f values

** Compute three lowess smoothings with different f values

#+BEGIN_SRC R :session :results silent :exports code :tangle "../tangled/smoothing.R"
smDatLowess0d05   <- lowess(xDat, yDat, f=.05)
smDatLowess0d20   <- lowess(xDat, yDat, f=.20)
smDatLowess0d50   <- lowess(xDat, yDat, f=.50)
#+END_SRC

** Put all of our lowess curves into a data.frame with the original data so we can plot it all with ggplot
#+BEGIN_SRC R :session :results silent :exports code :tangle "../tangled/smoothing.R"
allDat <- rbind(data.frame(smoother=rep('actual',       nPts), x=xDat,           y=yDat),
                data.frame(smoother=rep('lowess0d05',   nPts), x=smDatLowess0d05$x, y=smDatLowess0d05$y),
                data.frame(smoother=rep('lowess0d10',   nPts), x=smDatLowess0d10$x, y=smDatLowess0d10$y),
                data.frame(smoother=rep('lowess0d20',   nPts), x=smDatLowess0d20$x, y=smDatLowess0d20$y),
                data.frame(smoother=rep('lowess0d50',   nPts), x=smDatLowess0d50$x, y=smDatLowess0d50$y)
                )
#+END_SRC

** Plot them all

#+BEGIN_SRC R :session :file ../docs/figures/smoothing/low.png :width 800 :height 600 :results graphics :exports code :tangle "../tangled/smoothing.R"
ggplot(allDat, aes(x=x, y=y, col=smoother)) +
  geom_line(data=subset(allDat,  smoother!='actual')) +
  geom_point(data=subset(allDat, smoother=='actual')) +
  labs(title='Lowess At Various f Values')
#+END_SRC

#+RESULTS:

file:figures/smoothing/low.png  
